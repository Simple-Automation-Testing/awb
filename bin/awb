#!/usr/bin/env node

process.title = 'wd-interface'
const prompt = require('text-prompt');
const singleSelectPrompt = require('select-prompt');

const {
  getChromeDriver,
  writeId,
  killProc,
  getStandalone,
  clearChrome,
  clearStandalone,
  getGeckoDriver,
  spawnStandalone,
  spawnGeckodriver,
  spawnChromedriver
} = require('../drivers')

// wd install

const args = process.argv.slice(2);

const installationTypes = {
  all: 'all',
  chrome: 'chrome',
  gecko: 'gecko',
  standalone: 'standalone'
};

(async function choose() {
  const installationType = await selectParam(getPromptOptions(installationTypes))
  if(installationType === installationTypes.all) {
    await getChromeDriver().then(getStandalone).then(getGeckoDriver)
  } else if(installationType === installationTypes.chrome) {
    await getChromeDriver()
  } else if(installationType === installationTypes.gecko) {
    await getGeckoDriver()
  } else if(installationType === installationTypes.standalone) {
    await getStandalone()
  }
})()

function selectParam(options) {
  return new Promise(resolve => {
    singleSelectPrompt('Select installation:', options, {cursor: Math.floor(options.length / 2)})
      .on('submit', resolve)
  })
}

function getPromptOptions(options) {
  const preparedOptions = options instanceof Array
    ? options
    : Object.values(options);
  return preparedOptions.map(option => ({
    title: option,
    value: option,
  }));
}